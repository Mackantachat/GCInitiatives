// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTT_GC_API.Data;

namespace PTT_GC_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210104085230_add_RolePermission")]
    partial class add_RolePermission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PTT_GC_API.Models.ApprovalFlow.InitiativeStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlowType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativeStage");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ApprovalFlow.InitiativeStageActionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeStageDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InitiativeStageActionDetail");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ApprovalFlow.InitiativeStageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackwardStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackwardStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlowType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HistoryId")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeStageDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCreateType")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSwitchProcess")
                        .HasColumnType("bit");

                    b.Property<string>("NextCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostStageStoredProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreStageStoredProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviseStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sequence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Subtype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativeStageDetail");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ApprovalFlow.StageActionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StageActionMaster");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ApprovalFlow.StageMaster", b =>
                {
                    b.Property<int>("StageMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackwardStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackwardStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlowType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCreateType")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSwitchProcess")
                        .HasColumnType("bit");

                    b.Property<string>("NextCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostStageStoredProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreStageStoredProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviseStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sequence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Subtype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StageMasterId");

                    b.ToTable("StageMaster");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BestPractice.BestPracticeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbstractDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbstractSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplyFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplyFromOpEx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaptureMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaptureMethodNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnterpriseKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Investment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("IsBestPracticeRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDigitalization")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublishToOpex")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeTheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LifeTimeOfProject")
                        .HasColumnType("int");

                    b.Property<string>("Objective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OemsElement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectCost")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharedPracticeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TargetGroupNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("YearOfBestPractice")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BestPractices");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BestPractice.BestPracticeOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BestPracticeOrganizations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BestPractice.BestPracticePlant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BestPracticePlants");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BestPractice.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactNo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BestPractice.KnowledgeContributorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KnowledgeContributor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BestPracticeKnowledgeContributors");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BestPractice.ProjectReferenceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("ProjectReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectReference");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.AnnualInvestmentPlan", b =>
                {
                    b.Property<int>("AnnualInvestmentPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapexInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrencyFx")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("PlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Year1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year8")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year9")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("YearOverall")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AnnualInvestmentPlanId");

                    b.ToTable("AnnualInvestmentPlans");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.CapexInformations", b =>
                {
                    b.Property<int>("CapexInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionYear")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("AdditionalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AvailableBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BetweenYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CarriedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CodeCostCenterOfVP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CostCenter")
                        .HasColumnType("int");

                    b.Property<string>("CostCenterOfVP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExistingBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsMaxApprovedRev")
                        .HasColumnType("bit");

                    b.Property<string>("PoolBudgetForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProjecctComRun")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ProjectCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectExePeriodMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectExePeriodYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonOfChanging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestIniNoDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RequestPoolMAX")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ReturnCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Revistion")
                        .HasColumnType("int");

                    b.Property<int?>("Sequent")
                        .HasColumnType("int");

                    b.Property<decimal?>("SpendingActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SpendingActualAllPrevious")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SpendingActualCurrentYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferForm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CapexInformationId");

                    b.ToTable("CapexInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.DetailCapex", b =>
                {
                    b.Property<int>("DetailCapexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComparisonWithOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsistenWithCompanyStrategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateImageIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DepreciationCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DivisionManagerOfOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EbitdaBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpectedTargetAndResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KeySuccessFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KpisCapexId")
                        .HasColumnType("int");

                    b.Property<string>("KpisRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MileStoneAndSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NpvBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OptimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherResourcesNeeded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaybackBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PessimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionProcess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectIrrBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SafetyIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfFeedstock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsefulLife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VicePresidentOfOwner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailCapexId");

                    b.ToTable("DetailCapexs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.KpisCapex", b =>
                {
                    b.Property<int>("KpisCapexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetailCapexId")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KpisCapexId");

                    b.ToTable("KpisCapexs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.MonthlyInvestmentPlan", b =>
                {
                    b.Property<int>("MonthlyInvestmentPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnualInvestmentPlanId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Apr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CapexInformationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("InvestmentCostFx")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyOverall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SumMonthlyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonthlyInvestmentPlanId");

                    b.ToTable("MonthlyInvestmentPlans");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Chart.BlankablePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BlankableValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlankablePlans");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Chart.CLevelTargetLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Target")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CLevelTargetLines");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Chart.HistoricalGraphIL5Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("IL5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SIL5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnconvertedIL4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Week")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HistoricalGraphIL5Achievement");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Chart.HistoricalGraphNewIL4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("IL0_IL2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IL3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IL4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SIL4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Week")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HistoricalGraphNewIL4");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CimLookback", b =>
                {
                    b.Property<int>("CimLookbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aspect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CimLookbackType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifferenceNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.Property<string>("ResponsiblePerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CimLookbackId");

                    b.ToTable("CimLookback");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CoDeveloper.CoDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoDevelopers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CommonData.CommonData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attribute01")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute02")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute03")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute04")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute05")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute06")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute07")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute08")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute09")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute10")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute11")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute12")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute13")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute14")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute15")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute16")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute17")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute18")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute19")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Attribute20")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDisable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CommonData");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CommonData.CommonDataSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName01")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName02")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName03")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName04")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName05")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName06")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName07")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName08")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName09")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName10")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName11")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName12")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName13")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName14")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName15")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName16")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName17")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName18")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName19")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("AttributeName20")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("CommonDataSetting");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CoreUplift", b =>
                {
                    b.Property<int>("CoreUpliftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Economics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedPlaned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhyDifference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoreUpliftId");

                    b.ToTable("CoreUplift");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CpiDetailInformation.CpiKpiMonitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int>("kpiNo")
                        .HasColumnType("int");

                    b.Property<string>("kpiTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpiKpiMonitor");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CpiDetailInformationData.CpiDetailInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualBenefitCalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ActualBudgetOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ActualBudgetSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AnalysisTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedBenefitCalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EstimatedBenefitSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstimatedBudgetOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("LookbackText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhnBuPillar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCpi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfPhn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpiDetailInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CpiDetailInformationData.CpiKeyPerformanceIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Baseline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KpiTitle")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpiKpis");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CpiDetailInformationData.CpiStepExplaination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Finish")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("ResponsibleBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("StepTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpiStepExplaination");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Currency.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DashboardPermission.DashboardPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DashboardPermissions");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrequencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.InitiativeTypeMax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InitiativeTypeMaxTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativeTypeMaxs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.KpiDetailInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Kpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("KpiDetailInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.Kpis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KpisTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kpises");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.PimGate", b =>
                {
                    b.Property<int>("PimGateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdditionalOpexBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Benefit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostEstimate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmocStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionLookbackStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GateStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JFactor")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OverallCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PimGateStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ram")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReceivedCapexGate2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReceivedOpexBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RequestCapexGate3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RequestOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("RequestPool")
                        .HasColumnType("bit");

                    b.Property<int?>("ReviseBudgetRevision")
                        .HasColumnType("int");

                    b.Property<string>("SapStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SimplePayback")
                        .HasColumnType("int");

                    b.Property<bool?>("SimplefiedProject")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TieInLongLeadItemsBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("VacDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VacStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PimGateId");

                    b.ToTable("PimGate");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.Procurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProcurementName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcurementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Procurements");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.RequestEmoc", b =>
                {
                    b.Property<int>("RequestEmocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmocName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmocNo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmocRequestStatus")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmocStatus")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("RequestEmocId");

                    b.ToTable("RequestEmoc");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.RequestEmocQuestion", b =>
                {
                    b.Property<int>("RequestEmocQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EmocAnswer")
                        .HasColumnType("bit");

                    b.Property<string>("EmocQuestionId")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("RequestEmocQuestionId");

                    b.ToTable("RequestEmocQuestion");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.SubWorkstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CLevelOrder")
                        .HasColumnType("int");

                    b.Property<string>("SubWorkstream1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Subworkstream1Order")
                        .HasColumnType("int");

                    b.Property<int?>("Subworkstream2Order")
                        .HasColumnType("int");

                    b.Property<string>("WorkStreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkstreamOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DimMaxHandover.DimMaxHandover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcceptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommentAllIssueClosed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentCommunicationOrTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentDeliverables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentOperationSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EngineerEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAcceptHandover")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllIssueClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCommunicationOrTraining")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeliverables")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOperationSupport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOther")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LicenseOrSubscriptionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SupportFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DimMaxHandsover");
                });

            modelBuilder.Entity("PTT_GC_API.Models.EMOCs.MainPlant", b =>
                {
                    b.Property<int>("MainPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssumptionOfGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailOfTheChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMocTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmocNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoalAchievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitialListOfPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsMainPlant")
                        .HasColumnType("bit");

                    b.Property<string>("MocCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MocChampion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifiedGoalAchievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfChange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainPlanId");

                    b.ToTable("MainPlant");
                });

            modelBuilder.Entity("PTT_GC_API.Models.EntryMode.EntryMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntryModeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryModeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntryModes");
                });

            modelBuilder.Entity("PTT_GC_API.Models.EnvironmentProjectType", b =>
                {
                    b.Property<int>("EnviTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnviType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnviTypeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.HasKey("EnviTypeId");

                    b.ToTable("EnvironmentProjectType");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ExecutionLookback", b =>
                {
                    b.Property<int>("ExecutionLookbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonLearned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExecutionLookbackId");

                    b.ToTable("ExecutionLookback");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.IncomingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomingFile");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.IncomingFileData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Column1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IncomingFileData");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.MappingCapexAppWbs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AppRequestCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppRequestNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApprovedYear")
                        .HasColumnType("int");

                    b.Property<string>("ChangedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<bool?>("DistributedToWBS")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IMPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCAPEXNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RevisionNo")
                        .HasColumnType("int");

                    b.Property<bool?>("SentEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("WBSCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("WBSNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MappingCapexAppWbs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.OutgoingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutgoingFile");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.TmpInitiativeIdAppLists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TmpInitiativeIdAppLists");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.TmpInitiativeIdWBSLists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TmpInitiativeIdWBSLists");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexBudgetSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChoiceValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Effective")
                        .HasColumnType("datetime2");

                    b.Property<string>("Impact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Law")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CapexBudgetSurveys");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapexTopicId")
                        .HasColumnType("int");

                    b.Property<string>("ChoiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CapexTopicId");

                    b.ToTable("CapexChoices");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsYesOrNo")
                        .HasColumnType("bit");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CapexTopics");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.ITAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ITAssets");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.ITBudgetSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdvancedCapexChoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CapexSummary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("OpexNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OpexSummary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ITBudgetSurveys");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.ITBudgetSurveyAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ITBudgetSurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfUnit")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalMTHB")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ITBudgetSurveyAssets");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ImpactTypeOfBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("FixedFX")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ImpactTypeOfBenefitTable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Month1")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month10")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month11")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month12")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month13")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month14")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month15")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month16")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month17")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month18")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month19")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month2")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month20")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month21")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month22")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month23")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month24")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month25")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month26")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month27")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month28")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month29")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month3")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month30")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month31")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month32")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month33")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month34")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month35")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month36")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month4")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month5")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month6")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month7")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month8")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month9")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("RunRate")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TypeOfBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("ImpactTypeOfBenefits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ShareBenefitWorkstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Workstream")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("ShareBenefitWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangeSetId")
                        .HasColumnType("int");

                    b.Property<string>("CommentBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommentDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.DetailInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualBenefitCalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ActualBudgetOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ActualBudgetSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ActualFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnalysisTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BOD1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BOD2")
                        .HasColumnType("datetime2");

                    b.Property<string>("BaseCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Baseline")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BaselineFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("BaselineHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BaselineNonHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BaselineStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Boi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoiNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Capital")
                        .HasColumnType("bit");

                    b.Property<bool?>("Catalyst")
                        .HasColumnType("bit");

                    b.Property<string>("Comparison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComparisonWithOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consistent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateImageIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CutFeedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CycleMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CycleYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepreciationCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EbitdaBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EntryMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryModeSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentOrAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedBenefitCalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EstimatedBenefitSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstimatedBudgetOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpectedTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FX")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FirstBudgetYear")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ForEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForTurnaround")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeographySpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveAdditional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IL3Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IL5Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeTypeMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsDeliverAsPerCommittedCost")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliverAsPerCommittedDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliverAsPerCommittedScope")
                        .HasColumnType("bit");

                    b.Property<string>("KeySuccessFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListOfEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookbackText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MgrOfProcessEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Npv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OldAssetCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldAssetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherKpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaybackBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PessimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("President")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProLever")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProSubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionProcess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDmManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectIrrBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplaceEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplacementDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RequireBOD1")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequireProject")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReviseForecastFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReviseForecastStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RightOfUse")
                        .HasColumnType("bit");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafetyIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Saving")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingNonHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ScopeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Software")
                        .HasColumnType("bit");

                    b.Property<string>("SourceOfFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusProgress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCpi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UsefulMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UsefulYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueChain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workstream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otherResources")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewDetailInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.DetailInformation_Old", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualBenefitCalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ActualBudgetOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ActualBudgetSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ActualFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnalysisTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssumptionOfGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Baseline")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BaselineFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("BaselineHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BaselineNonHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BaselineStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Boi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoiNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Capital")
                        .HasColumnType("bit");

                    b.Property<bool?>("Catalyst")
                        .HasColumnType("bit");

                    b.Property<string>("Cfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComparisonWithOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consistent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateImageIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CutFeedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CycleMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CycleYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepreciationCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitalStrategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DirectBenefit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DivMgrOfProcessEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EbitdaBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentOrAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedBenefitCalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EstimatedBenefitSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstimatedBudgetOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpectedTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FixedAsset")
                        .HasColumnType("bit");

                    b.Property<string>("ForEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForTurnaround")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Gate1Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Gate2Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Gate3Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoalAchievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveAdditional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IL3Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IL5Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("IndirectBenefit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeTypeMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InititativeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAlignWithCorporateStrategy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliverAsPerCommittedCost")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliverAsPerCommittedDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliverAsPerCommittedScope")
                        .HasColumnType("bit");

                    b.Property<bool>("IsImpactProduction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainPlant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSimProjectSkipGate2")
                        .HasColumnType("bit");

                    b.Property<string>("KeySuccessFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KickoffMeeting")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NpvBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OldAssetCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldAssetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherKpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaybackBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PessimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("President")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProLever")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProSubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionProcess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDocumentDatabase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectIrrBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectPriority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplaceEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplacementDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RequestSubPic")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequireIndirectBenefit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReviseForecastFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReviseForecastStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RightOfUse")
                        .HasColumnType("bit");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafetyIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Saving")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingNonHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ScopeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SimProjectSkipGate2")
                        .HasColumnType("bit");

                    b.Property<string>("Smes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Software")
                        .HasColumnType("bit");

                    b.Property<string>("SourceOfFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SponsorEvp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StepExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToFinance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCpi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UsefulMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UsefulYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueChain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workstream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkstreamLeadVp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otherResources")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("requireDirectBenefit")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("DetailInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.DimMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("MemberEmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DimMembers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Financial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AvgEbitda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AvgRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValuation")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("Financials");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.FinancialIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Capex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ebitda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Opex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valuation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("FinancialIndicators");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.ImpactTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AutoCalculate")
                        .HasColumnType("bit");

                    b.Property<string>("ContactIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactIOBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("FinancialImpactArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstApprovedIL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstRunRateMonth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveShareBenefit")
                        .HasColumnType("bit");

                    b.Property<decimal?>("IL4RunRateOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL4RunRateRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FixedFxOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FixedFxRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FloatFxOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FloatFxRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5RunRateOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5RunRateRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("ImpiemantCost")
                        .HasColumnType("bit");

                    b.Property<bool>("IndirectBenefit")
                        .HasColumnType("bit");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastApprovedIL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastApprovedIL5Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSubmittedSIL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSubmittedSIL5Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIL4Achievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIL5Achievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToComment")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal?>("TotalCostOPEX")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("ImpactTrackings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Initiative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AlignWithCorpStrategy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal?>("BenefitAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BenefitAmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BestPracticeTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("BudgetSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CapexTabStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("Cim")
                        .HasColumnType("bit");

                    b.Property<string>("CommentCancelled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostEstCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CostEstCapexType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostEstOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CostEstOpexType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Cpi")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DMPlantOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DeletedFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("DetailTabStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("Dim")
                        .HasColumnType("bit");

                    b.Property<bool?>("DirectCapex")
                        .HasColumnType("bit");

                    b.Property<bool?>("Divestment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FxExchange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GeneralTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("GoToStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HistoryFlag")
                        .HasColumnType("int");

                    b.Property<string>("ITDigital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImpactTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeSubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Integration")
                        .HasColumnType("bit");

                    b.Property<bool?>("InvolveItDigital")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsCreatedApp")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreatedWbs")
                        .HasColumnType("bit");

                    b.Property<int?>("IsPassPimGate1")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRequestCapex")
                        .HasColumnType("bit");

                    b.Property<decimal?>("JFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LagacyInitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LagacyInitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("LastActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LessonLearnTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookbackOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LookbackTabStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("Max")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PayBackPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Pim")
                        .HasColumnType("bit");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgressTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RandD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegisteringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCapex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestOpex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequestProjectEngineer")
                        .HasColumnType("bit");

                    b.Property<int?>("ResourceTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("ResultObjective")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("RiskTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("SSPIM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeOfWork")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SecretProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SortStage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpecifyCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Strategy")
                        .HasColumnType("bit");

                    b.Property<int?>("StrategyTabStatus")
                        .HasColumnType("int");

                    b.Property<string>("StrategyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackMax")
                        .HasColumnType("bit");

                    b.Property<string>("TypeBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VPPlantOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Wacc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isSetInitiativeSubType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Initiatives");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("FlowType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int?>("InitiativeStageDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeActions");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeCoDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeCoDevelopers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BOD1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BOD2")
                        .HasColumnType("datetime2");

                    b.Property<string>("BaseCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comparison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateImageIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EbitdaBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntitySpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryMode")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FX")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FirstBudgetYear")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FxChoice")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Geography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeographySpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KeySuccessFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListOfEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MgrOfProcessEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal?>("Npv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OptimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaybackBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PessimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("President")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionProcess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectIrrBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireBOD1")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequireProject")
                        .HasColumnType("bit");

                    b.Property<string>("SafetyIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ShareOfInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SourceOfFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("StrategyDetail")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SynergyBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("InitiativeDetails");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeHistoryIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeIdHistory")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeIdMain")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InitiativeHistoryIndex");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativePrint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Column1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Column9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativePrint");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastSubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativeStatusHistory");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeStatusTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlowType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RunningSequence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Sequence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeStatusTrackings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.MaxApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaxApprovers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.MaxApproverSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("WorkstreamType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkstreamValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaxApproverSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCpiDetail")
                        .HasColumnType("bit");

                    b.Property<string>("KeyDeliverable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.InformKri", b =>
                {
                    b.Property<int>("InformKriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InformKriId");

                    b.ToTable("InformKri");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.KriData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KriName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KriScoreMonth1")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth10")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth11")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth12")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth2")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth3")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth4")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth5")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth6")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth7")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth8")
                        .HasColumnType("int");

                    b.Property<int>("KriScoreMonth9")
                        .HasColumnType("int");

                    b.Property<int>("KriSequence")
                        .HasColumnType("int");

                    b.Property<string>("KriText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Target1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KriData");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.KriDetailMonth", b =>
                {
                    b.Property<int>("KriDetailMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AprColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AprScore")
                        .HasColumnType("int");

                    b.Property<string>("AugColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AugScore")
                        .HasColumnType("int");

                    b.Property<string>("DecColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DecScore")
                        .HasColumnType("int");

                    b.Property<string>("ExecutionKri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FebColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FebScore")
                        .HasColumnType("int");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAction")
                        .HasColumnType("bit");

                    b.Property<string>("JanColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JanScore")
                        .HasColumnType("int");

                    b.Property<string>("JulColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JulScore")
                        .HasColumnType("int");

                    b.Property<string>("JunColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JunScore")
                        .HasColumnType("int");

                    b.Property<int?>("KpiMaintainId")
                        .HasColumnType("int");

                    b.Property<string>("KriDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KriOrder")
                        .HasColumnType("int");

                    b.Property<string>("KriType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MarColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarScore")
                        .HasColumnType("int");

                    b.Property<string>("MayColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MayScore")
                        .HasColumnType("int");

                    b.Property<string>("NovColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NovScore")
                        .HasColumnType("int");

                    b.Property<string>("OctColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OctScore")
                        .HasColumnType("int");

                    b.Property<string>("SepColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SepScore")
                        .HasColumnType("int");

                    b.Property<string>("Target1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("KriDetailMonthId");

                    b.ToTable("KriDetailMonth");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.KriMitigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("MitigationMonth1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationMonth9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KriMitigations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.KriModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kri");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.KriProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("ProgressDetailMonth1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressDetailMonth9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KriProgressDetails");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.KriProgressMitigation", b =>
                {
                    b.Property<int>("KriProgressMitigationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Jan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jul")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KpiMaintainId")
                        .HasColumnType("int");

                    b.Property<string>("KriType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("May")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KriProgressMitigationId");

                    b.ToTable("KriProgressMitigation");
                });

            modelBuilder.Entity("PTT_GC_API.Models.KRI.MaintainKpi", b =>
                {
                    b.Property<int>("KpiMaintainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KpiName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScoreLevel1")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreLevel2")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreLevel3")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreLevel4")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreLevel5")
                        .HasColumnType("int");

                    b.Property<string>("ScoreText1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScoreText2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScoreText3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScoreText4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScoreText5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("KpiMaintainId");

                    b.ToTable("MaintainKpi");
                });

            modelBuilder.Entity("PTT_GC_API.Models.LessonLearned.LessonsLearned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfLearning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonLearned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectPhaseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LessonsLearned");
                });

            modelBuilder.Entity("PTT_GC_API.Models.LookbackReview", b =>
                {
                    b.Property<int>("LookbackReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectReviewTeam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LookbackReviewId");

                    b.ToTable("LookbackReview");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Milestone.MilestoneStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MilestoneStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilestoneStatuses");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Organization.Organization", b =>
                {
                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrganizationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Outstanding.OutstandingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ItemListValueBaht")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Outstanding")
                        .HasColumnType("int");

                    b.Property<int?>("OutstandingId")
                        .HasColumnType("int");

                    b.Property<string>("RpcDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RpcValueBaht")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OutstandingData");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Outstanding.OutstandingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualBaht")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BudgetBaht")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CommitmentBaht")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Contingency")
                        .HasColumnType("int");

                    b.Property<int?>("EstimateAtCompletion")
                        .HasColumnType("int");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<decimal?>("PoItemBaht")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrItemBaht")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Outstandings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.OverviewPermission.OverviewPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OverviewPermissions");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Owner.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignmentCostCenter")
                        .HasColumnType("int");

                    b.Property<string>("BloodGrp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CEOManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("CEOManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("CEOOrgID")
                        .HasColumnType("int");

                    b.Property<string>("CEOShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEOTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("DepManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("DepOrgID")
                        .HasColumnType("int");

                    b.Property<string>("DepShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DivManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("DivManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("DivOrgID")
                        .HasColumnType("int");

                    b.Property<string>("DivShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpGroupTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpSubGroup")
                        .HasColumnType("int");

                    b.Property<string>("EmpSubGroupTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmploymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentStatusTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FNGRPManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("FNGRPManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("FNGRPOrgID")
                        .HasColumnType("int");

                    b.Property<string>("FNGRPShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNGRPTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FNManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("FNManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("FNOrgID")
                        .HasColumnType("int");

                    b.Property<string>("FNShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MainPositionCostCenter")
                        .HasColumnType("bigint");

                    b.Property<bool?>("MainPositionFlg")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManagerialFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("OrgID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgLevel")
                        .HasColumnType("int");

                    b.Property<string>("OrgShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PSDManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("PSDManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("PSDOrgID")
                        .HasColumnType("int");

                    b.Property<string>("PSDShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSDTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentOrgID")
                        .HasColumnType("int");

                    b.Property<int?>("PositionID")
                        .HasColumnType("int");

                    b.Property<int?>("PositionLevel")
                        .HasColumnType("int");

                    b.Property<string>("PositionShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftOrgID")
                        .HasColumnType("int");

                    b.Property<string>("ShiftShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("SupManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("SupOrgID")
                        .HasColumnType("int");

                    b.Property<string>("SupShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("UnitManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("UnitOrgID")
                        .HasColumnType("int");

                    b.Property<string>("UnitShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.PageSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.PermissionMaster", b =>
                {
                    b.Property<int>("PermissionMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionMasterId");

                    b.ToTable("PermissionMaster");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.RoleManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIndividual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("PageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleManagements");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.RolePermission", b =>
                {
                    b.Property<int>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PermissionMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RolePermissionId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.RoleSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.RoleSettingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("InitiativeType")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIndividual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("PageId")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter01")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter02")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter03")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter04")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter05")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter06")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter07")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter08")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter09")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter10")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter11")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter12")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter13")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter14")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter15")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter16")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter17")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter18")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter19")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Parameter20")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SectionId")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TypeOfInvestment")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("RoleSettingDetail");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.SectionSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SectionSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsIgnoreHrWebService")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserManagements");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOrganizations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserWorkstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkstreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Plant.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("PTT_GC_API.Models.PoolBudget.PoolBudgetFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PoolBudgetFromId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoolBudgetFromName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PoolBudgetFrom");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Product.ProductUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductUnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.BscNarrative", b =>
                {
                    b.Property<int>("BscNarrativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatchupPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommissioningStartup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engineering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentKpi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutiveSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighlightWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("MitigationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("NarrativeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskAndConcern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkForNextMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("BscNarrativeId");

                    b.ToTable("BscNarrative");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.InvestmentCost", b =>
                {
                    b.Property<int>("InvestmentCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AprCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AugCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DecCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FebCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentCostType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("JanCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("JulCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("JunCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MarCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MayCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NovCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OctCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverallCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SepCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("YearCost")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvestmentCostId");

                    b.ToTable("InvestmentCost");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActualFinish")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KeyDeliverable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Milestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlanFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("ProgressDetails");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressHeader", b =>
                {
                    b.Property<int>("ProgressHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppropriationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommissioningStartup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engineering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentKpi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutiveSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSendAppRequest")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSendWBS")
                        .HasColumnType("bit");

                    b.Property<string>("MitigationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalBu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskAndConcern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolomonCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandardProjectDef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WbsNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkForNextMonth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgressHeaderId");

                    b.ToTable("ProgressHeader");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressPlan", b =>
                {
                    b.Property<int>("ProgressPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Apr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PlanActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressPlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgressPlanId");

                    b.ToTable("ProgressPlan");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressPlanDate", b =>
                {
                    b.Property<int>("ProgressPlanDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BasicFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BasicStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int?>("PocWeightPercent")
                        .HasColumnType("int");

                    b.Property<string>("ProgressPlanDateType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgressPlanDateId");

                    b.ToTable("ProgressPlanDate");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressPlanMontly", b =>
                {
                    b.Property<int>("ProgressPlanMontlyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Month1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month8")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Month9")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PlanActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgressPlanId")
                        .HasColumnType("int");

                    b.Property<string>("ProgressPlanYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkProgress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgressPlanMontlyId");

                    b.ToTable("ProgressPlanMontly");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProjectImpact", b =>
                {
                    b.Property<int>("ProjectImpactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("After")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Before")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.Property<string>("Situation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectImpactId");

                    b.ToTable("ProjectImpact");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProjectImpactWork", b =>
                {
                    b.Property<int>("ProjectImpactWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectLookbackId")
                        .HasColumnType("int");

                    b.Property<string>("WhatDidNotWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatWorked")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectImpactWorkId");

                    b.ToTable("ProjectImpactWork");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProjectLookback", b =>
                {
                    b.Property<int>("ProjectLookbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BusinessPlanAsOfDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BusinessPlanAsOfDate2")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("CimLookback")
                        .HasColumnType("bit");

                    b.Property<string>("CoreUpliftResultAfter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreUpliftResultBefore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreUpliftResultBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreUpliftResultDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreUpliftResultRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreUpliftResultUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnviPlanLookbackDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EnvironmentLookback")
                        .HasColumnType("bit");

                    b.Property<string>("EnvironmentResultAfter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentResultBefore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentResultBenefitYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentResultBenefitYearThb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentResultCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentResultRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentResultUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExecutionLookback")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GlobalEnvirCons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalEnvirConsSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("McEndorseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PerformanceLookback")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PerformancePlanLookbackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanEnviLookBackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanLookbackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanPerformanceLookbackDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PollutionPrevention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PollutionPreventionSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectBackground")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceCirculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceCirculationSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeOfInitiative")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectLookbackId");

                    b.ToTable("ProjectLookback");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.AirPollution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AirPollutions");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.Condensate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("COD")
                        .HasColumnType("datetime2");

                    b.Property<string>("CondensateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstSupply")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FlowMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FlowNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PressureLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PressureMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PressureNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<float?>("SupplyPeriods")
                        .HasColumnType("real");

                    b.Property<decimal?>("TempMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TempNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("TopicId")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Condensates");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.Electricity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("COD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstSupply")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Normal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<float?>("SupplyPeriods")
                        .HasColumnType("real");

                    b.Property<double?>("TopicId")
                        .HasColumnType("float");

                    b.Property<decimal?>("Voltage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Electricities");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lands");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.Manpower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AmountPerson")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Manpowers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.Other", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("COD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstSupply")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlowMaxAmount")
                        .HasColumnType("int");

                    b.Property<string>("FlowMaxUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlowNormalAmount")
                        .HasColumnType("int");

                    b.Property<string>("FlowNormalUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PressureMaxAmount")
                        .HasColumnType("int");

                    b.Property<string>("PressureMaxUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PressureNormalAmount")
                        .HasColumnType("int");

                    b.Property<string>("PressureNormalUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<float?>("SupplyPeriods")
                        .HasColumnType("real");

                    b.Property<double?>("TopicId")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Others");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.ResourceNeeded", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAirPollutionRequire")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsImportRequire")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLandRequire")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManpowerRequire")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUtilityRequire")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWasteRequire")
                        .HasColumnType("bit");

                    b.Property<string>("RemarkImport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceNeededs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeeded.Waste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wastes");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ResourceNeededFormsModel.Fluid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("COD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstSupply")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlowMax")
                        .HasColumnType("int");

                    b.Property<int?>("FlowNormal")
                        .HasColumnType("int");

                    b.Property<string>("FlowUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FluidType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PressureMax")
                        .HasColumnType("int");

                    b.Property<int?>("PressureNormal")
                        .HasColumnType("int");

                    b.Property<string>("PressureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceNeededId")
                        .HasColumnType("int");

                    b.Property<float?>("SupplyPeriods")
                        .HasColumnType("real");

                    b.Property<double?>("TopicId")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Fluids");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovePeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitingControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactExitingControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactMitigationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("LikelihoodExitingControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LikelihoodMitigationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationProgress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationProgressImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MitigationProgressLikelihood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RiskFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskLevelExitingControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskLevelMitigationPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskLevelMitigationProgress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("PTT_GC_API.Models.RiskKRI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KriNo")
                        .HasColumnType("int");

                    b.Property<string>("KriProgress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KriStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KriTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KriTolerance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RiskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RiskKRIs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.RiskProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionDueStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActionNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualCompletingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RiskId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskProgress");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.BU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BUText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BU");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.RoleDetailSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleDetailSetting");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.RoleScreen", b =>
                {
                    b.Property<int>("RoleScreenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleScreenId");

                    b.ToTable("RoleScreen");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.ScreenObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ScreenObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenObjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScreenObject");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.UserManagement2", b =>
                {
                    b.Property<int>("UserManagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workstream")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserManagementId");

                    b.ToTable("UserManagement2");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Role.WorkStream2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkstreamID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkstreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkStream2");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Setting.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FinishPeriodAnnual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishPeriodBudgetPool")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishPeriodIT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishPeriodMid")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IL4TrackingPeriod")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeCodeFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActiveITBudgetSurvey")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAvailableBudgetPool")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAvailablePeriodAnnual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAvailablePeriodMid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OneTimeBenefit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PeriodForKeeping")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartPeriodAnnual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartPeriodBudgetPool")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartPeriodIT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartPeriodMid")
                        .HasColumnType("datetime2");

                    b.HasKey("SettingId");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CAPEX_ReportParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CAPEX_ReportParameter");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportDetail", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregateFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Axis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportDetail");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportHeader", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTypeLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X_AxisLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Y_AxisLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isAccumulate")
                        .HasColumnType("bit");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportHeader");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportParameter", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<string>("Required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportParameter");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportReportType", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportReportType");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportStageType", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportStageType");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy.StrategicObjective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StrategicObjectiveCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjectiveTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StrategicObjectives");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy.Strategy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StrategicObjectiveId")
                        .HasColumnType("int");

                    b.Property<string>("StrategyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StrategicObjectiveId");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TempHRWebService.TempHRWebService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainPositionCostCenter")
                        .HasColumnType("int");

                    b.Property<string>("OrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TempHRWebServices");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TmpInitiativeCodeIF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IFType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TmpInitiativeIdIFs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeOfBenefit.TypeOfBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfBenefitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBenefitGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBenefitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfBenefits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeOfInvestment.TypeOfInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfInvestmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInvestmentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfInvestments");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeofStage.TypeStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeStage");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeofStage.TypeStageApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeStageApprover");
                });

            modelBuilder.Entity("PTT_GC_API.Models.URLTableSetting.URLTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("URLTables");
                });

            modelBuilder.Entity("PTT_GC_API.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PTT_GC_API.Models.VacPic.InitiativeListPoolPim", b =>
                {
                    b.Property<int>("InitiativeListPoolPimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BenefitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BenefitValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GateSelect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoolId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProjectCost")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Reference")
                        .HasColumnType("bit");

                    b.Property<string>("StageGate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("initiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InitiativeListPoolPimId");

                    b.ToTable("InitiativeListPoolPim");
                });

            modelBuilder.Entity("PTT_GC_API.Models.VacPic.InitiativeMember", b =>
                {
                    b.Property<int>("InitiativeMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BudgetSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmocNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverallBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmesRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacPicId")
                        .HasColumnType("int");

                    b.HasKey("InitiativeMemberId");

                    b.ToTable("InitiativeMember");
                });

            modelBuilder.Entity("PTT_GC_API.Models.VacPic.PicList", b =>
                {
                    b.Property<int>("PicListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusPic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PicListId");

                    b.ToTable("PicList");
                });

            modelBuilder.Entity("PTT_GC_API.Models.VacPic.PicMember", b =>
                {
                    b.Property<int>("PicMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PicListId")
                        .HasColumnType("int");

                    b.HasKey("PicMemberId");

                    b.ToTable("PicMember");
                });

            modelBuilder.Entity("PTT_GC_API.Models.VacPic.VacList", b =>
                {
                    b.Property<int>("VacListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusVac")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VacListId");

                    b.ToTable("VacList");
                });

            modelBuilder.Entity("PTT_GC_API.Models.VacPic.VacMember", b =>
                {
                    b.Property<int>("VacMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VacListId")
                        .HasColumnType("int");

                    b.HasKey("VacMemberId");

                    b.ToTable("VacMember");
                });

            modelBuilder.Entity("PTT_GC_API.Models.WorkStream.WorkStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkStreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkStreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.KpiDetailInformation", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("KpiDetailInformations")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexChoice", b =>
                {
                    b.HasOne("PTT_GC_API.Models.ITBudget.CapexTopic", null)
                        .WithMany("CapexChoices")
                        .HasForeignKey("CapexTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ImpactTypeOfBenefit", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("ImpactTypeOfBenefits")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ShareBenefitWorkstream", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("ShareBenefitWorkstreams")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Attachment", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("Attachments")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.DetailInformation_Old", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("DetailInformations")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.DetailInformation_Old", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Financial", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("Financials")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.Financial", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.FinancialIndicator", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("FinancialIndicators")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.ImpactTracking", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("ImpactTrackings")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.ImpactTracking", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeAction", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("InitiativeActions")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeCoDeveloper", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("InitiativeCoDevelopers")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeDetail", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("InitiativeDetails")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.InitiativeDetail", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeStatusTracking", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("InitiativeStatusTrackings")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Milestone", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("Milestones")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Product", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("Products")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressDetail", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("ProgressDetails")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy.Strategy", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Strategy.StrategicObjective", null)
                        .WithMany("Strategies")
                        .HasForeignKey("StrategicObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
